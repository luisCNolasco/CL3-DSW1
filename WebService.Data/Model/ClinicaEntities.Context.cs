//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebService.Data.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CLINICAEntities : DbContext
    {
        public CLINICAEntities()
            : base("name=CLINICAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DOCTOR> DOCTOR { get; set; }
    
        public virtual int SP_ACTUALIZAR_DOCTOR(Nullable<int> id, string nom, string ape, Nullable<int> idEsp, string tel, string cor, Nullable<int> idDis)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var apeParameter = ape != null ?
                new ObjectParameter("ape", ape) :
                new ObjectParameter("ape", typeof(string));
    
            var idEspParameter = idEsp.HasValue ?
                new ObjectParameter("idEsp", idEsp) :
                new ObjectParameter("idEsp", typeof(int));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var corParameter = cor != null ?
                new ObjectParameter("cor", cor) :
                new ObjectParameter("cor", typeof(string));
    
            var idDisParameter = idDis.HasValue ?
                new ObjectParameter("idDis", idDis) :
                new ObjectParameter("idDis", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACTUALIZAR_DOCTOR", idParameter, nomParameter, apeParameter, idEspParameter, telParameter, corParameter, idDisParameter);
        }
    
        public virtual int SP_ELIMINAR_DOCTOR(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ELIMINAR_DOCTOR", idParameter);
        }
    
        public virtual ObjectResult<SP_LISTAR_DISTRITO_Result> SP_LISTAR_DISTRITO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTAR_DISTRITO_Result>("SP_LISTAR_DISTRITO");
        }
    
        public virtual ObjectResult<SP_LISTAR_DOCTOR_Result> SP_LISTAR_DOCTOR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTAR_DOCTOR_Result>("SP_LISTAR_DOCTOR");
        }
    
        public virtual ObjectResult<SP_LISTAR_ESPECIALIDAD_Result> SP_LISTAR_ESPECIALIDAD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTAR_ESPECIALIDAD_Result>("SP_LISTAR_ESPECIALIDAD");
        }
    
        public virtual int SP_REGISTRAR_DOCTOR(string nom, string ape, Nullable<int> idEsp, string tel, string cor, Nullable<int> idDis)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var apeParameter = ape != null ?
                new ObjectParameter("ape", ape) :
                new ObjectParameter("ape", typeof(string));
    
            var idEspParameter = idEsp.HasValue ?
                new ObjectParameter("idEsp", idEsp) :
                new ObjectParameter("idEsp", typeof(int));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var corParameter = cor != null ?
                new ObjectParameter("cor", cor) :
                new ObjectParameter("cor", typeof(string));
    
            var idDisParameter = idDis.HasValue ?
                new ObjectParameter("idDis", idDis) :
                new ObjectParameter("idDis", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_REGISTRAR_DOCTOR", nomParameter, apeParameter, idEspParameter, telParameter, corParameter, idDisParameter);
        }
    }
}
